syntax = "proto3";

package nextapp.pb;

message KeyValue {
    string key = 1;
    optional string value = 2;
}

message Empty {}

message Status {
    int32 error = 1; // 0 == OK
    string message = 2;
}

message ServerInfo {
    repeated KeyValue properties = 1;
}

message Node {
    enum Kind {
        FOLDER = 0;
        ORGANIZATION = 1;
        PERSON = 2;
        PROJECT = 3;
        TASK = 4;
    }

    string uuid = 1;
    string parent = 2;
    string user = 3;
    bool active = 4;
    string name = 5;
    Kind kind = 6;
    string descr = 7;
}

message UpdateRequest {
    enum Kind {
        REFRESH = 0;
    }

    Kind kind = 1;
}

message NodeTreeItem {
    Node node = 1;
    repeated NodeTreeItem children = 2;
}

message NodeTree {
    repeated NodeTreeItem nodes = 1;
}

message NodeUpdate {
    enum Operation {
        ADDED = 0;      // When a refresh is requested, all the existing nodes are 'ADDED'
        DELETED = 1;    // For deleted nodes, only the id is set in the Node's body
        UPDATED = 2;    // Some data was changed, but the node is at the same position on the tree
        MOVED = 4;      // The node moved in the three. The data has not changed
        ALL = 5;        // A full transfer. Sends a tree.
    }

    // The operation applies to all the nodes in the list
    Operation op = 1;
    // We send either nodes or a tree, but pb 3 'oneof' does not support 'repeated'
    repeated Node nodes = 2;
    NodeTree tree = 3;
}

message DayColor {
    string id = 1;
    bool systemColor = 2; // Should not be deleted or modified
    int32 score = 3;
    string color = 4;
    string name = 5;
}

message DayColorDefinitions {
    repeated DayColor dayColors = 1;
}

// Do it this way to avoid all kinds of problems with time zones.
message Date {
    int32 year = 1;
    int32 month = 2; // 0 - 11, starting with January
    int32 mday = 3;
}

message Day {
    Date date = 1;
    string user = 2; // uuid
    string color = 3; // uuid
    bool hasNotes = 4;
    bool hasReport = 5;
}

message CompleteDay {
    Day day = 1;
    optional string notes = 2;
    optional string report = 3;
}

message MonthReq {
    int32 year = 1;
    int32 month = 2; // 0 - 11, starting with January
}

message Month {
    int32 year = 1;
    int32 month = 2; // 0 - 11, starting with January
    repeated Day days = 3;
}

message SetColorReq {
    Date date = 1;
    string color = 2;
}

service Nextapp {
    rpc GetServerInfo(Empty) returns (ServerInfo) {}
    rpc GetNodes(UpdateRequest) returns (stream NodeUpdate) {}
    rpc NodeChanged(NodeUpdate) returns (Status) {}
    rpc GetDayColorDefinitions(Empty) returns (DayColorDefinitions) {}

    rpc GetDay(Date) returns (CompleteDay) {}
    rpc GetMonth(MonthReq) returns (Month) {}
    rpc SetColorOnDay(SetColorReq) returns (Empty) {}
}


