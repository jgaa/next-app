
#include <QDebug>

#include "QCoreApplication"

#include "NextAppCore.h"
#include "logging.h"
#include "JniGuard.h"

extern "C" JNIEXPORT void JNICALL
Java_@PACKAGE_NAME_UNDERSCORES@_MainActivity_nativeOnSharedNextapp(
        JNIEnv *env,
        jobject /* activity */,
        jstring jPath)
{
    LOG_DEBUG_N << "Got a shared-file event.";
    qDebug() << "Got a shared-file event.";
    const char *cPath = env->GetStringUTFChars(jPath, nullptr);
    QString qPath = QString::fromUtf8(cPath);
    env->ReleaseStringUTFChars(jPath, cPath);

    LOG_DEBUG_N << "Got a shared-file event for " << qPath;

    NextAppCore::handleSharedFile(qPath);
}

namespace nextapp::android {

QString getMediaDir() {
#ifdef NEXTAPP_USE_JNI
    requireStaticMethod(
        "@PACKAGE_NAME_SLASHES@/MainActivity",
        "getAppMediaDir",
        "()Ljava/lang/String;");

    static const QString dir = QJniObject::callStaticObjectMethod(
    "@PACKAGE_NAME_SLASHES@/MainActivity",
    "getAppMediaDir",
    "()Ljava/lang/String;"
    ).toString();

    return dir;
#else
    LOG_WARN_N << "JNI not available, using temp dir for media dir.";
    return {};
#endif
}

QString getLogsDir() {
#ifdef NEXTAPP_USE_JNI
    requireStaticMethod(
        "@PACKAGE_NAME_SLASHES@/MainActivity",
        "ensureMediaSubdir",
        "(Ljava/lang/String;)Ljava/lang/String;");

    static const QString dir = QJniObject::callStaticObjectMethod(
    "@PACKAGE_NAME_SLASHES@/MainActivity",
    "ensureMediaSubdir",
    "(Ljava/lang/String;)Ljava/lang/String;",
    QJniObject::fromString("Logs").object<jstring>()
    ).toString();
    return dir;
#else
    LOG_WARN_N << "JNI not available, using temp dir for logs dir.";
    return QCoreApplication::applicationDirPath() + "/Logs";
#endif
}

QString getNamedDir(const QString& name) {
#ifdef NEXTAPP_USE_JNI
    requireStaticMethod(
        "@PACKAGE_NAME_SLASHES@/MainActivity",
        "ensureMediaSubdir",
        "(Ljava/lang/String;)Ljava/lang/String;");

    static const QString dir = QJniObject::callStaticObjectMethod(
    "@PACKAGE_NAME_SLASHES@/MainActivity",
    "ensureMediaSubdir",
    "(Ljava/lang/String;)Ljava/lang/String;",
    QJniObject::fromString(name).object<jstring>()
    ).toString();
    return dir;
#else
    LOG_WARN_N << "JNI not available, using temp dir for " << name << " dir.";
    return QCoreApplication::applicationDirPath() + "/" + name;
#endif
}

} // ns

